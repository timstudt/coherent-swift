name: 'coherent-swift'
description: 'Measures cohesion in your Swift codebase'
author: 'Arthur Alves <arthuralves.p@gmail.com>'
branding:
  icon: "code"
  color: "green"

inputs:
  sources:
    description: 'Source folders to scan.'
    required: true
  minimum_threshold:
    description: 'Overall cohesion will be validated against this minimum threshold.'
    required: true
    default: '80'
  reports_folder:
    description: 'The folder where your reports will be saved to.'
    required: true
    default: './coherent-swift-reports'
  ignore_output_result:
    description: 'If "true", measure in passive mode. Observe without enforcing changes'
    required: true
    default: 'false'
  report_format:
    description: 'Format of cohesion report. Available formats: json, plain'
    required: true
    default: 'json'
  only_changes:
    description: 'If "true", only measure cohesion on changed files.'
    required: true
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Prepare spec
      shell: bash
      run: |
        echo -e "sources:\n  - ${{ inputs.sources }}\n" > ${{ github.action_path }}/_coherent-swift.yml
        echo -e "minimum_threshold: ${{ inputs.minimum_threshold }}\n" >> ${{ github.action_path }}/_coherent-swift.yml
        echo -e "reports_folder: ${{ inputs.reports_folder }}\n" >> ${{ github.action_path }}/_coherent-swift.yml
        echo -e "ignore_output_result: ${{ inputs.ignore_output_result }}\n" >> ${{ github.action_path }}/_coherent-swift.yml
        echo -e "report_format: ${{ inputs.report_format }}\n" >> ${{ github.action_path }}/_coherent-swift.yml

    - name: Measure cohesion
      shell: bash
      run: |
        cd ${{ github.action_path }}
        make githubci-install
        if [[ ${{ inputs.only_changes }} == 'true' ]]; then
            coherent-swift report -d -s _coherent-swift.yml
        else
            coherent-swift report -s _coherent-swift.yml
        fi
